<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maiya.dao.AppUserMapper">
  <resultMap id="BaseResultMap" type="com.maiya.bean.AppUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="points" jdbcType="SMALLINT" property="points" />
    <collection property="user" resultMap="userResult" />
  </resultMap>

  <resultMap id="userResult" type="com.maiya.bean.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="verification" jdbcType="VARCHAR" property="verification" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="background_icon" jdbcType="VARCHAR" property="backgroundIcon" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, address, points
  </sql>


  <select id="selectAppUserByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
    user_tbl.*,
    app_user_tbl.*
    from user_tbl
    <!--LEFT JOIN app_user_tbl ON user_tbl.id = app_user_tbl.user_id-->
    LEFT JOIN app_user_tbl ON user_tbl.id = app_user_tbl.user_id
    where 1=1
    and user_tbl.id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAppUserByPassword" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    user_tbl.*,
    app_user_tbl.*
    from user_tbl
    LEFT JOIN app_user_tbl ON user_tbl.id = app_user_tbl.user_id
    where 1=1
    and user_tbl.name = #{0}
    and user_tbl.password = #{1}
  </select>

  <select id="selectAppAllUser" resultMap="BaseResultMap">
    select
    user_tbl.*,
    app_user_tbl.*
    from user_tbl
    LEFT JOIN app_user_tbl ON  app_user_tbl.user_id = user_tbl.id
    where 1 = 1
    <if test="_parameter != null and _parameter != ''">
      AND user_tbl.name like CONCAT('%',#{_parameter,jdbcType=VARCHAR},'%')
    </if>
      AND app_user_tbl.user_id > 0
    ORDER BY app_user_tbl.id
  </select>

  <select id="selectAllAppByUserId" resultMap="BaseResultMap" parameterType="hashmap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    user_tbl.*,
    app_user_tbl.*
    from  user_tbl
    LEFT JOIN app_user_tbl ON user_tbl.id = app_user_tbl.user_id
    where 1 = 1
    <if test="name != null and name != ''">
      AND user_tbl.name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="userId != null">
      AND user_tbl.id = #{id,jdbcType=BIGINT}
    </if>
    ORDER BY app_user_tbl.id
  </select>


  <update id="updateAppByPrimaryKey" parameterType="com.maiya.bean.User">
    update user_tbl as u, app_user_tbl as a
    set u.name = #{name,jdbcType=VARCHAR},
    u.sex = #{sex,jdbcType=TINYINT},
    u.age = #{age,jdbcType=TINYINT},
    u.avatar = #{avatar,jdbcType=VARCHAR},
    u.email = #{email,jdbcType=VARCHAR},
    u.phone_number = #{phoneNumber,jdbcType=VARCHAR},
    u.verification = #{verification,jdbcType=VARCHAR},
    u.password = #{password,jdbcType=VARCHAR},
    u.background_icon = #{backgroundIcon,jdbcType=VARCHAR},
    u.id_card = #{idCard,jdbcType=VARCHAR},
    a.address = #{address,jdbcType=VARCHAR},
    a.points = #{points,jdbcType=SMALLINT}
    where u.id = a.user_id
    AND u.id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_user_tbl
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_user_tbl
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.maiya.bean.AppUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_user_tbl (user_id, address, points
      )
    values (#{userId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, #{points,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maiya.bean.AppUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_user_tbl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="points != null">
        points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.maiya.bean.AppUser">
    update app_user_tbl
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maiya.bean.AppUser">
    update app_user_tbl
    set user_id = #{userId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      points = #{points,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>